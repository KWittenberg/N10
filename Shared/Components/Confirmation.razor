@inject AppState App
@implements IDisposable

<!-- Confirmation -->
<div class="modal fade @ModalClass bg-transparent60" tabindex="-1" style="display:@(Show ? "block" : "none");" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content bg-white">
            <div class="modal-body">
                <div class="text-center">
                    <div class="m-4">
                        @if (Icon == "success")
                        {
                            <svg viewBox="0 0 60 60" class="success-checkmark">
                                <circle class="checkmark-circle" cx="30" cy="30" r="25" fill="none" />
                                <path class="checkmark-check" fill="none" d="M18 30l7 7 16-16" />
                            </svg>
                        }

                        @if (Icon == "error")
                        {
                            <svg viewBox="0 0 60 60" class="error-xmark">
                                <circle class="xmark-circle" cx="30" cy="30" r="25" fill="none" />
                                <path class="xmark-check" fill="none" d="M20 20 L40 40 M40 20 L20 40" />
                            </svg>
                        }

                        @if (Icon == "working")
                        {
                            <div class="d-flex justify-content-center">
                                <div class="text-center">
                                    <div class="spinner-border text-primary" style="width: 7rem; height: 7rem;" role="status"></div>
                                    <h5 class="mt-3 fw-normal text-primary">working...</h5>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="mt-2">
                        <h5>@Message</h5>
                    </div>
                    @if (Icon != "working")
                    {
                        <div class="mt-5 mb-4">
                            <button type="button" class="btn btn-primary w-25 shadow" @onclick="Hide">OK</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    bool Show = false;

    string ModalClass = string.Empty;

    string? Message { get; set; } = string.Empty;

    string? Icon { get; set; } = "success";

    
    protected override void OnInitialized() => App.OnShowConfirmation += ShowConfirmation;

    async Task ShowConfirmation(string message, string type)
    {
        Show = true;
        ModalClass = "show d-block";
        Icon = type;
        Message = message;
        StateHasChanged();

        // Modal će nestati nakon 5 sekundi
        await Task.Delay(5000);
        Hide();
    }

    public async Task ShowProgress(string? type, string? message)
    {
        Show = true;
        ModalClass = "show d-block";
        Icon = type;
        Message = message;
        StateHasChanged();
        await Task.Delay(200);
        Hide();
    }

    void Hide()
    {
        Show = false;
        ModalClass = string.Empty;
        StateHasChanged();
    }

    public void Dispose() => App.OnShowConfirmation -= ShowConfirmation;
}